// <auto-generated />
using System;
using Day01G03.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day01G03.TPT
{
    [DbContext(typeof(InheritanceDbContext))]
    [Migration("20250902203408_TPC")]
    partial class TPC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day01G03.Inheritance_Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Day01G03.Inheritance_Models.FullTimeEmployee", b =>
                {
                    b.HasBaseType("Day01G03.Inheritance_Models.Employee");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.ToTable("FullTimeEmployee", (string)null);
                });

            modelBuilder.Entity("Day01G03.Inheritance_Models.PartTimeEmployee", b =>
                {
                    b.HasBaseType("Day01G03.Inheritance_Models.Employee");

                    b.Property<int>("CountOfHours")
                        .HasColumnType("int");

                    b.Property<double>("HourRate")
                        .HasColumnType("float");

                    b.ToTable("PartTimeEmployee", (string)null);
                });

            modelBuilder.Entity("Day01G03.Inheritance_Models.FullTimeEmployee", b =>
                {
                    b.HasOne("Day01G03.Inheritance_Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("Day01G03.Inheritance_Models.FullTimeEmployee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Day01G03.Inheritance_Models.PartTimeEmployee", b =>
                {
                    b.HasOne("Day01G03.Inheritance_Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("Day01G03.Inheritance_Models.PartTimeEmployee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
